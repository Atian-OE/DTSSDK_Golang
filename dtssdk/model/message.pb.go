// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: dtssdk/model/message.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgID int32

const (
	MsgID_ConnectID               MsgID = 0
	MsgID_DisconnectID            MsgID = 1
	MsgID_GetDefenceZoneRequestID MsgID = 2
	MsgID_GetDefenceZoneReplyID   MsgID = 3
	MsgID_SetDeviceRequestID      MsgID = 4
	MsgID_SetDeviceReplyID        MsgID = 5
	MsgID_ZoneTempNotifyID        MsgID = 6
	MsgID_ZoneAlarmNotifyID       MsgID = 7
	MsgID_DeviceEventNotifyID     MsgID = 8
	MsgID_TempSignalNotifyID      MsgID = 9
	MsgID_GetDeviceIDRequestID    MsgID = 10
	MsgID_GetDeviceIDReplyID      MsgID = 11
	MsgID_CancelSoundRequestID    MsgID = 12
	MsgID_CancelSoundReplyID      MsgID = 13
	MsgID_ResetAlarmRequestID     MsgID = 14
	MsgID_ResetAlarmReplyID       MsgID = 15
	MsgID_ButtonNotifyID          MsgID = 16
	MsgID_HeartBeatID             MsgID = 250
)

// Enum value maps for MsgID.
var (
	MsgID_name = map[int32]string{
		0:   "ConnectID",
		1:   "DisconnectID",
		2:   "GetDefenceZoneRequestID",
		3:   "GetDefenceZoneReplyID",
		4:   "SetDeviceRequestID",
		5:   "SetDeviceReplyID",
		6:   "ZoneTempNotifyID",
		7:   "ZoneAlarmNotifyID",
		8:   "DeviceEventNotifyID",
		9:   "TempSignalNotifyID",
		10:  "GetDeviceIDRequestID",
		11:  "GetDeviceIDReplyID",
		12:  "CancelSoundRequestID",
		13:  "CancelSoundReplyID",
		14:  "ResetAlarmRequestID",
		15:  "ResetAlarmReplyID",
		16:  "ButtonNotifyID",
		250: "HeartBeatID",
	}
	MsgID_value = map[string]int32{
		"ConnectID":               0,
		"DisconnectID":            1,
		"GetDefenceZoneRequestID": 2,
		"GetDefenceZoneReplyID":   3,
		"SetDeviceRequestID":      4,
		"SetDeviceReplyID":        5,
		"ZoneTempNotifyID":        6,
		"ZoneAlarmNotifyID":       7,
		"DeviceEventNotifyID":     8,
		"TempSignalNotifyID":      9,
		"GetDeviceIDRequestID":    10,
		"GetDeviceIDReplyID":      11,
		"CancelSoundRequestID":    12,
		"CancelSoundReplyID":      13,
		"ResetAlarmRequestID":     14,
		"ResetAlarmReplyID":       15,
		"ButtonNotifyID":          16,
		"HeartBeatID":             250,
	}
)

func (x MsgID) Enum() *MsgID {
	p := new(MsgID)
	*p = x
	return p
}

func (x MsgID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgID) Descriptor() protoreflect.EnumDescriptor {
	return file_dtssdk_model_message_proto_enumTypes[0].Descriptor()
}

func (MsgID) Type() protoreflect.EnumType {
	return &file_dtssdk_model_message_proto_enumTypes[0]
}

func (x MsgID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgID.Descriptor instead.
func (MsgID) EnumDescriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{0}
}

//防区状态
type DefenceAreaState int32

const (
	DefenceAreaState_Normal       DefenceAreaState = 0 //正常
	DefenceAreaState_WarnDiffer   DefenceAreaState = 1 //温差预警
	DefenceAreaState_WarnUp       DefenceAreaState = 2 //温升预警
	DefenceAreaState_WarnTemp     DefenceAreaState = 3 //定温预警
	DefenceAreaState_AlarmDiffer  DefenceAreaState = 4 //温差警报
	DefenceAreaState_AlarmUp      DefenceAreaState = 5 //温升警报
	DefenceAreaState_AlarmTemp    DefenceAreaState = 6 //定温警报
	DefenceAreaState_WarnLowTemp  DefenceAreaState = 7 //低温预警
	DefenceAreaState_AlarmLowTemp DefenceAreaState = 8 //低温警报
)

// Enum value maps for DefenceAreaState.
var (
	DefenceAreaState_name = map[int32]string{
		0: "Normal",
		1: "WarnDiffer",
		2: "WarnUp",
		3: "WarnTemp",
		4: "AlarmDiffer",
		5: "AlarmUp",
		6: "AlarmTemp",
		7: "WarnLowTemp",
		8: "AlarmLowTemp",
	}
	DefenceAreaState_value = map[string]int32{
		"Normal":       0,
		"WarnDiffer":   1,
		"WarnUp":       2,
		"WarnTemp":     3,
		"AlarmDiffer":  4,
		"AlarmUp":      5,
		"AlarmTemp":    6,
		"WarnLowTemp":  7,
		"AlarmLowTemp": 8,
	}
)

func (x DefenceAreaState) Enum() *DefenceAreaState {
	p := new(DefenceAreaState)
	*p = x
	return p
}

func (x DefenceAreaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DefenceAreaState) Descriptor() protoreflect.EnumDescriptor {
	return file_dtssdk_model_message_proto_enumTypes[1].Descriptor()
}

func (DefenceAreaState) Type() protoreflect.EnumType {
	return &file_dtssdk_model_message_proto_enumTypes[1]
}

func (x DefenceAreaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DefenceAreaState.Descriptor instead.
func (DefenceAreaState) EnumDescriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{1}
}

//防区状态
type FiberState int32

const (
	FiberState_SSTATEISOK   FiberState = 0 //光纤正常
	FiberState_SSTATUSUNFIN FiberState = 1 //光纤拔出
	FiberState_SSTATUSFIN   FiberState = 2 //光纤插入
	FiberState_SSTATUSBRK   FiberState = 3 //光纤断裂
	FiberState_SSTATUSTLO   FiberState = 4 //光纤过长
	FiberState_SSTATUSLTM   FiberState = 5 //光纤损耗过多
)

// Enum value maps for FiberState.
var (
	FiberState_name = map[int32]string{
		0: "SSTATEISOK",
		1: "SSTATUSUNFIN",
		2: "SSTATUSFIN",
		3: "SSTATUSBRK",
		4: "SSTATUSTLO",
		5: "SSTATUSLTM",
	}
	FiberState_value = map[string]int32{
		"SSTATEISOK":   0,
		"SSTATUSUNFIN": 1,
		"SSTATUSFIN":   2,
		"SSTATUSBRK":   3,
		"SSTATUSTLO":   4,
		"SSTATUSLTM":   5,
	}
)

func (x FiberState) Enum() *FiberState {
	p := new(FiberState)
	*p = x
	return p
}

func (x FiberState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FiberState) Descriptor() protoreflect.EnumDescriptor {
	return file_dtssdk_model_message_proto_enumTypes[2].Descriptor()
}

func (FiberState) Type() protoreflect.EnumType {
	return &file_dtssdk_model_message_proto_enumTypes[2]
}

func (x FiberState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FiberState.Descriptor instead.
func (FiberState) EnumDescriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{2}
}

//设备
type DeviceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID     int32      `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	DeviceID      string     `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp     int64      `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	EventType     FiberState `protobuf:"varint,4,opt,name=EventType,proto3,enum=model.FiberState" json:"EventType,omitempty"`
	ChannelLength float32    `protobuf:"fixed32,5,opt,name=ChannelLength,proto3" json:"ChannelLength,omitempty"`
}

func (x *DeviceEvent) Reset() {
	*x = DeviceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEvent) ProtoMessage() {}

func (x *DeviceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEvent.ProtoReflect.Descriptor instead.
func (*DeviceEvent) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceEvent) GetChannelID() int32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *DeviceEvent) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *DeviceEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceEvent) GetEventType() FiberState {
	if x != nil {
		return x.EventType
	}
	return FiberState_SSTATEISOK
}

func (x *DeviceEvent) GetChannelLength() float32 {
	if x != nil {
		return x.ChannelLength
	}
	return 0
}

//防区
type DefenceZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 int32            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ChannelID          int32            `protobuf:"varint,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	ZoneName           string           `protobuf:"bytes,3,opt,name=ZoneName,proto3" json:"ZoneName,omitempty"`
	Start              float32          `protobuf:"fixed32,4,opt,name=Start,proto3" json:"Start,omitempty"`
	Finish             float32          `protobuf:"fixed32,5,opt,name=Finish,proto3" json:"Finish,omitempty"`
	Tag                string           `protobuf:"bytes,6,opt,name=Tag,proto3" json:"Tag,omitempty"`
	AlarmType          DefenceAreaState `protobuf:"varint,7,opt,name=AlarmType,proto3,enum=model.DefenceAreaState" json:"AlarmType,omitempty"`
	AlarmLoc           float32          `protobuf:"fixed32,8,opt,name=AlarmLoc,proto3" json:"AlarmLoc,omitempty"`
	MaxTemperature     float32          `protobuf:"fixed32,9,opt,name=MaxTemperature,proto3" json:"MaxTemperature,omitempty"`
	MinTemperature     float32          `protobuf:"fixed32,10,opt,name=MinTemperature,proto3" json:"MinTemperature,omitempty"`
	AverageTemperature float32          `protobuf:"fixed32,11,opt,name=AverageTemperature,proto3" json:"AverageTemperature,omitempty"`
}

func (x *DefenceZone) Reset() {
	*x = DefenceZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefenceZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefenceZone) ProtoMessage() {}

func (x *DefenceZone) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefenceZone.ProtoReflect.Descriptor instead.
func (*DefenceZone) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{1}
}

func (x *DefenceZone) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DefenceZone) GetChannelID() int32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *DefenceZone) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *DefenceZone) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DefenceZone) GetFinish() float32 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *DefenceZone) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DefenceZone) GetAlarmType() DefenceAreaState {
	if x != nil {
		return x.AlarmType
	}
	return DefenceAreaState_Normal
}

func (x *DefenceZone) GetAlarmLoc() float32 {
	if x != nil {
		return x.AlarmLoc
	}
	return 0
}

func (x *DefenceZone) GetMaxTemperature() float32 {
	if x != nil {
		return x.MaxTemperature
	}
	return 0
}

func (x *DefenceZone) GetMinTemperature() float32 {
	if x != nil {
		return x.MinTemperature
	}
	return 0
}

func (x *DefenceZone) GetAverageTemperature() float32 {
	if x != nil {
		return x.AverageTemperature
	}
	return 0
}

//设置设备请求
type SetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneTempNotifyEnable    bool `protobuf:"varint,1,opt,name=ZoneTempNotifyEnable,proto3" json:"ZoneTempNotifyEnable,omitempty"`
	ZoneAlarmNotifyEnable   bool `protobuf:"varint,2,opt,name=ZoneAlarmNotifyEnable,proto3" json:"ZoneAlarmNotifyEnable,omitempty"`
	FiberStatusNotifyEnable bool `protobuf:"varint,3,opt,name=FiberStatusNotifyEnable,proto3" json:"FiberStatusNotifyEnable,omitempty"`
	TempSignalNotifyEnable  bool `protobuf:"varint,4,opt,name=TempSignalNotifyEnable,proto3" json:"TempSignalNotifyEnable,omitempty"`
	ButtonNotifyEnable      bool `protobuf:"varint,5,opt,name=ButtonNotifyEnable,proto3" json:"ButtonNotifyEnable,omitempty"`
}

func (x *SetDeviceRequest) Reset() {
	*x = SetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceRequest) ProtoMessage() {}

func (x *SetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceRequest.ProtoReflect.Descriptor instead.
func (*SetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{2}
}

func (x *SetDeviceRequest) GetZoneTempNotifyEnable() bool {
	if x != nil {
		return x.ZoneTempNotifyEnable
	}
	return false
}

func (x *SetDeviceRequest) GetZoneAlarmNotifyEnable() bool {
	if x != nil {
		return x.ZoneAlarmNotifyEnable
	}
	return false
}

func (x *SetDeviceRequest) GetFiberStatusNotifyEnable() bool {
	if x != nil {
		return x.FiberStatusNotifyEnable
	}
	return false
}

func (x *SetDeviceRequest) GetTempSignalNotifyEnable() bool {
	if x != nil {
		return x.TempSignalNotifyEnable
	}
	return false
}

func (x *SetDeviceRequest) GetButtonNotifyEnable() bool {
	if x != nil {
		return x.ButtonNotifyEnable
	}
	return false
}

//设置设备回执
type SetDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *SetDeviceReply) Reset() {
	*x = SetDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceReply) ProtoMessage() {}

func (x *SetDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceReply.ProtoReflect.Descriptor instead.
func (*SetDeviceReply) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{3}
}

func (x *SetDeviceReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetDeviceReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//获取所有防区
type GetDefenceZoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel int32  `protobuf:"varint,1,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Search  string `protobuf:"bytes,2,opt,name=Search,proto3" json:"Search,omitempty"`
}

func (x *GetDefenceZoneRequest) Reset() {
	*x = GetDefenceZoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefenceZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefenceZoneRequest) ProtoMessage() {}

func (x *GetDefenceZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefenceZoneRequest.ProtoReflect.Descriptor instead.
func (*GetDefenceZoneRequest) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetDefenceZoneRequest) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *GetDefenceZoneRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

//获取所有防区
type GetDefenceZoneReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrMsg  string         `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Rows    []*DefenceZone `protobuf:"bytes,3,rep,name=Rows,proto3" json:"Rows,omitempty"`
}

func (x *GetDefenceZoneReply) Reset() {
	*x = GetDefenceZoneReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDefenceZoneReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefenceZoneReply) ProtoMessage() {}

func (x *GetDefenceZoneReply) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefenceZoneReply.ProtoReflect.Descriptor instead.
func (*GetDefenceZoneReply) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{5}
}

func (x *GetDefenceZoneReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetDefenceZoneReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetDefenceZoneReply) GetRows() []*DefenceZone {
	if x != nil {
		return x.Rows
	}
	return nil
}

//获取设备id 请求
type GetDeviceIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDeviceIDRequest) Reset() {
	*x = GetDeviceIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceIDRequest) ProtoMessage() {}

func (x *GetDeviceIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceIDRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceIDRequest) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{6}
}

//获取设备id 回执
type GetDeviceIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrMsg   string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	DeviceID string `protobuf:"bytes,3,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
}

func (x *GetDeviceIDReply) Reset() {
	*x = GetDeviceIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceIDReply) ProtoMessage() {}

func (x *GetDeviceIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceIDReply.ProtoReflect.Descriptor instead.
func (*GetDeviceIDReply) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeviceIDReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetDeviceIDReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetDeviceIDReply) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

//消音请求
type CancelSoundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelSoundRequest) Reset() {
	*x = CancelSoundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSoundRequest) ProtoMessage() {}

func (x *CancelSoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSoundRequest.ProtoReflect.Descriptor instead.
func (*CancelSoundRequest) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{8}
}

//消音回执
type CancelSoundReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *CancelSoundReply) Reset() {
	*x = CancelSoundReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSoundReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSoundReply) ProtoMessage() {}

func (x *CancelSoundReply) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSoundReply.ProtoReflect.Descriptor instead.
func (*CancelSoundReply) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{9}
}

func (x *CancelSoundReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelSoundReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//重置警报请求
type ResetAlarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetAlarmRequest) Reset() {
	*x = ResetAlarmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAlarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAlarmRequest) ProtoMessage() {}

func (x *ResetAlarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAlarmRequest.ProtoReflect.Descriptor instead.
func (*ResetAlarmRequest) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{10}
}

//重置警报回执
type ResetAlarmReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *ResetAlarmReply) Reset() {
	*x = ResetAlarmReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetAlarmReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetAlarmReply) ProtoMessage() {}

func (x *ResetAlarmReply) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetAlarmReply.ProtoReflect.Descriptor instead.
func (*ResetAlarmReply) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResetAlarmReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResetAlarmReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//防区温度，广播
type ZoneTempNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID  string         `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp int64          `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Zones     []*DefenceZone `protobuf:"bytes,3,rep,name=Zones,proto3" json:"Zones,omitempty"`
}

func (x *ZoneTempNotify) Reset() {
	*x = ZoneTempNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneTempNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneTempNotify) ProtoMessage() {}

func (x *ZoneTempNotify) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneTempNotify.ProtoReflect.Descriptor instead.
func (*ZoneTempNotify) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{12}
}

func (x *ZoneTempNotify) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *ZoneTempNotify) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ZoneTempNotify) GetZones() []*DefenceZone {
	if x != nil {
		return x.Zones
	}
	return nil
}

//防区警报 广播
type ZoneAlarmNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID  string         `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp int64          `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Zones     []*DefenceZone `protobuf:"bytes,3,rep,name=Zones,proto3" json:"Zones,omitempty"`
}

func (x *ZoneAlarmNotify) Reset() {
	*x = ZoneAlarmNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneAlarmNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneAlarmNotify) ProtoMessage() {}

func (x *ZoneAlarmNotify) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneAlarmNotify.ProtoReflect.Descriptor instead.
func (*ZoneAlarmNotify) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{13}
}

func (x *ZoneAlarmNotify) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *ZoneAlarmNotify) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ZoneAlarmNotify) GetZones() []*DefenceZone {
	if x != nil {
		return x.Zones
	}
	return nil
}

//设备状态， 广播
type DeviceEventNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelID     int32      `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	DeviceID      string     `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp     int64      `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	EventType     FiberState `protobuf:"varint,4,opt,name=EventType,proto3,enum=model.FiberState" json:"EventType,omitempty"`
	ChannelLength float32    `protobuf:"fixed32,5,opt,name=ChannelLength,proto3" json:"ChannelLength,omitempty"`
}

func (x *DeviceEventNotify) Reset() {
	*x = DeviceEventNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEventNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEventNotify) ProtoMessage() {}

func (x *DeviceEventNotify) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEventNotify.ProtoReflect.Descriptor instead.
func (*DeviceEventNotify) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceEventNotify) GetChannelID() int32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *DeviceEventNotify) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *DeviceEventNotify) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DeviceEventNotify) GetEventType() FiberState {
	if x != nil {
		return x.EventType
	}
	return FiberState_SSTATEISOK
}

func (x *DeviceEventNotify) GetChannelLength() float32 {
	if x != nil {
		return x.ChannelLength
	}
	return 0
}

//温度信号， 广播
type TempSignalNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID   string    `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	ChannelID  int32     `protobuf:"varint,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	RealLength float32   `protobuf:"fixed32,3,opt,name=RealLength,proto3" json:"RealLength,omitempty"`
	Signal     []float32 `protobuf:"fixed32,4,rep,packed,name=Signal,proto3" json:"Signal,omitempty"`
	Timestamp  int64     `protobuf:"varint,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *TempSignalNotify) Reset() {
	*x = TempSignalNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempSignalNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempSignalNotify) ProtoMessage() {}

func (x *TempSignalNotify) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempSignalNotify.ProtoReflect.Descriptor instead.
func (*TempSignalNotify) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{15}
}

func (x *TempSignalNotify) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *TempSignalNotify) GetChannelID() int32 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *TempSignalNotify) GetRealLength() float32 {
	if x != nil {
		return x.RealLength
	}
	return 0
}

func (x *TempSignalNotify) GetSignal() []float32 {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *TempSignalNotify) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

//重置按钮和消音按钮的， 广播
type ButtonNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID          string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp         int64  `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	CancelSoundButton bool   `protobuf:"varint,3,opt,name=CancelSoundButton,proto3" json:"CancelSoundButton,omitempty"`
	ResetButton       bool   `protobuf:"varint,4,opt,name=ResetButton,proto3" json:"ResetButton,omitempty"`
}

func (x *ButtonNotify) Reset() {
	*x = ButtonNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonNotify) ProtoMessage() {}

func (x *ButtonNotify) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonNotify.ProtoReflect.Descriptor instead.
func (*ButtonNotify) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{16}
}

func (x *ButtonNotify) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *ButtonNotify) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ButtonNotify) GetCancelSoundButton() bool {
	if x != nil {
		return x.CancelSoundButton
	}
	return false
}

func (x *ButtonNotify) GetResetButton() bool {
	if x != nil {
		return x.ResetButton
	}
	return false
}

//心跳
type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dtssdk_model_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_dtssdk_model_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_dtssdk_model_message_proto_rawDescGZIP(), []int{17}
}

var File_dtssdk_model_message_proto protoreflect.FileDescriptor

var file_dtssdk_model_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x74, 0x73, 0x73, 0x64, 0x6b, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0xea, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x35, 0x0a, 0x09,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x63, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x63, 0x12,
	0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x4d, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x9e, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x5a, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x5a, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x5a, 0x6f, 0x6e, 0x65,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x17, 0x46, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x46, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x54, 0x65, 0x6d, 0x70,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x42, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x49, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22,
	0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x73,
	0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x74,
	0x0a, 0x0e, 0x5a, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x5a, 0x6f,
	0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x5a,
	0x6f, 0x6e, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x0f, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x28, 0x0a, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0xa2, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x2a, 0xa6, 0x03,
	0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x65,
	0x6e, 0x63, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x5a, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x44, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x44, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x10, 0x0d,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x10, 0x0f,
	0x12, 0x12, 0x0a, 0x0e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x44, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x49, 0x44, 0x10, 0xfa, 0x01, 0x2a, 0x98, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x41, 0x72, 0x65, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x61, 0x72, 0x6e, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x61, 0x72, 0x6e, 0x55,
	0x70, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x10, 0x06, 0x12, 0x0f,
	0x0a, 0x0b, 0x57, 0x61, 0x72, 0x6e, 0x4c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x10, 0x07, 0x12,
	0x10, 0x0a, 0x0c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x10,
	0x08, 0x2a, 0x6e, 0x0a, 0x0a, 0x46, 0x69, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x54, 0x41, 0x54, 0x45, 0x49, 0x53, 0x4f, 0x4b, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x55, 0x4e, 0x46, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x46, 0x49, 0x4e, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x42, 0x52, 0x4b, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x54, 0x4c, 0x4f, 0x10,
	0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x4c, 0x54, 0x4d, 0x10,
	0x05, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x2f, 0x64, 0x74, 0x73, 0x73, 0x64, 0x6b, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x3b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_dtssdk_model_message_proto_rawDescOnce sync.Once
	file_dtssdk_model_message_proto_rawDescData = file_dtssdk_model_message_proto_rawDesc
)

func file_dtssdk_model_message_proto_rawDescGZIP() []byte {
	file_dtssdk_model_message_proto_rawDescOnce.Do(func() {
		file_dtssdk_model_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_dtssdk_model_message_proto_rawDescData)
	})
	return file_dtssdk_model_message_proto_rawDescData
}

var file_dtssdk_model_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dtssdk_model_message_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_dtssdk_model_message_proto_goTypes = []interface{}{
	(MsgID)(0),                    // 0: model.MsgID
	(DefenceAreaState)(0),         // 1: model.DefenceAreaState
	(FiberState)(0),               // 2: model.FiberState
	(*DeviceEvent)(nil),           // 3: model.DeviceEvent
	(*DefenceZone)(nil),           // 4: model.DefenceZone
	(*SetDeviceRequest)(nil),      // 5: model.SetDeviceRequest
	(*SetDeviceReply)(nil),        // 6: model.SetDeviceReply
	(*GetDefenceZoneRequest)(nil), // 7: model.GetDefenceZoneRequest
	(*GetDefenceZoneReply)(nil),   // 8: model.GetDefenceZoneReply
	(*GetDeviceIDRequest)(nil),    // 9: model.GetDeviceIDRequest
	(*GetDeviceIDReply)(nil),      // 10: model.GetDeviceIDReply
	(*CancelSoundRequest)(nil),    // 11: model.CancelSoundRequest
	(*CancelSoundReply)(nil),      // 12: model.CancelSoundReply
	(*ResetAlarmRequest)(nil),     // 13: model.ResetAlarmRequest
	(*ResetAlarmReply)(nil),       // 14: model.ResetAlarmReply
	(*ZoneTempNotify)(nil),        // 15: model.ZoneTempNotify
	(*ZoneAlarmNotify)(nil),       // 16: model.ZoneAlarmNotify
	(*DeviceEventNotify)(nil),     // 17: model.DeviceEventNotify
	(*TempSignalNotify)(nil),      // 18: model.TempSignalNotify
	(*ButtonNotify)(nil),          // 19: model.ButtonNotify
	(*HeartBeat)(nil),             // 20: model.HeartBeat
}
var file_dtssdk_model_message_proto_depIdxs = []int32{
	2, // 0: model.DeviceEvent.EventType:type_name -> model.FiberState
	1, // 1: model.DefenceZone.AlarmType:type_name -> model.DefenceAreaState
	4, // 2: model.GetDefenceZoneReply.Rows:type_name -> model.DefenceZone
	4, // 3: model.ZoneTempNotify.Zones:type_name -> model.DefenceZone
	4, // 4: model.ZoneAlarmNotify.Zones:type_name -> model.DefenceZone
	2, // 5: model.DeviceEventNotify.EventType:type_name -> model.FiberState
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_dtssdk_model_message_proto_init() }
func file_dtssdk_model_message_proto_init() {
	if File_dtssdk_model_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dtssdk_model_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefenceZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefenceZoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDefenceZoneReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSoundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSoundReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAlarmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetAlarmReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneTempNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneAlarmNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEventNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempSignalNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dtssdk_model_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dtssdk_model_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dtssdk_model_message_proto_goTypes,
		DependencyIndexes: file_dtssdk_model_message_proto_depIdxs,
		EnumInfos:         file_dtssdk_model_message_proto_enumTypes,
		MessageInfos:      file_dtssdk_model_message_proto_msgTypes,
	}.Build()
	File_dtssdk_model_message_proto = out.File
	file_dtssdk_model_message_proto_rawDesc = nil
	file_dtssdk_model_message_proto_goTypes = nil
	file_dtssdk_model_message_proto_depIdxs = nil
}
